@model VirtualVendingMachine.Data.DTO.ProductsAvailableDto
@{
    ViewBag.Title = "VendingMachine";

}

@{




}

<h2>Vending Machine</h2>
<div class="row">
    @for (var i = 0; i < Model.ProductsAvailable.Count; i++)
    {
        if (Model.ProductsAvailable[i].Available == false)
        {
            <div class="col-md-4">
                <div class="panel panel-danger">
                    <div class="panel-heading">
                        @Model.ProductsAvailable[i].ProductName
                        <i class="fa fa-eur">@Model.ProductsAvailable[i].Price</i>
                        <label>@Model.ProductsAvailable[i].Message</label>
                        <button class="btn btn-warning disabled"><i class="fa fa-times"></i></button>
                    </div>
                </div>
            </div>
        }
        else
        {
            <div class="col-md-4">
                <div class="panel panel-success">
                    <div class="panel-heading">
                        @Model.ProductsAvailable[i].ProductName
                        <i class="fa fa-eur">@Model.ProductsAvailable[i].Price</i>
                        <label>@Model.ProductsAvailable[i].Message</label>
                        <a href="@Url.Action("OrderVendingMachineProduct", "VendingMachine", new {vendingMachineProductId = Model.ProductsAvailable[i].VendingMachineProductId, totalAmountInserted = Model.TotalAmountInserted})" class="btn btn-warning"><i class="fa fa-check"></i></a>
                    </div>
                </div>
            </div>
        }
    }
</div>

<div class="row">
    <div class="col-md-3">
        <label>Amount : </label><label>@Model.TotalAmountInserted</label>
    </div>
    <button onclick="takeBackCoins()" class="btn btn-default col-md-2">Take Back Coins</button>
</div>

@if (TempData["CoinChange"] != null)
{
    Html.RenderPartial("_ChangeListPartial", TempData["CoinChange"]);
}


@if (TempData["CoinBack"] != null)
{
    Html.RenderPartial("_CoinBackPartial", TempData["CoinBack"]);
}
@{ Html.RenderAction("CoinListPartial"); }

<script>
    var coinsInserted =[];

    var array = @Html.Raw(Json.Encode(Model.CoinsInserted));
    coinsInserted = array;


    function insertCoin(currencyId) {
        var count = coinsInserted.length;

        if (count === 0) {
            var dataNew = {
                CurrencyId: currencyId,
                Pieces: 1

            };
            coinsInserted.push(dataNew);
            $.ajax({
                url: '@Url.Action("VendingMachine", "VendingMachine")',
                type: 'POST',
                data: {
                    dto : coinsInserted
                },
                success: function(data) {
                    $("body").html(data);
                }

            });
        } else {
            var index = findIndex(currencyId);

            if (index >= 0) {
                coinsInserted[index].Pieces = coinsInserted[index].Pieces + 1;
                $.ajax({
                    url: '@Url.Action("VendingMachine", "VendingMachine")',
                    type: 'POST',
                    data: {
                        dto: coinsInserted
                    },
                    success: function (data) {
                        $("body").html(data);

                    }
                });
            } else {
                var data = {
                    CurrencyId: currencyId,
                    Pieces: 1

                };
                coinsInserted.push(data);
                $.ajax({
                    url: '@Url.Action("VendingMachine", "VendingMachine")',
                    type: 'POST',
                    data: {
                        dto: coinsInserted
                    },
                    success: function(data) {
                        $("body").html(data);
                    }
                });
            }

        }
    }

    function findIndex(currencyId) {
        var i = 0;
        var count = coinsInserted.length;
        for (i = 0; i < count; i++) {
            if (currencyId === coinsInserted[i].CurrencyId) {
                return i;
            }
        }
        return -1;
    }

    function takeBackCoins() {
        if (coinsInserted.length != 0) {
            $.ajax({
                url: '@Url.Action("CoinBack", "VendingMachine")',
                type: 'POST',
                data: {
                    dto: coinsInserted
                },
                success: function(data) {
                    $("body").html(data);
                }
            });
        } else {
            $.ajax({
                url: '@Url.Action("VendingMachine", "VendingMachine")',
                type: 'POST',
                data: {
                    dto: coinsInserted
                },
                success: function(data) {
                    $("body").html(data);
                }
            });
        }
    }

    @if (TempData["NotificationMessage"] != null && TempData["NotificationMessage"].ToString() == "Success")
    {
        <text>
            document.addEventListener("DOMContentLoaded", function(event){

                toastr.success('Thank You');
            })
        </text>
    }

</script>